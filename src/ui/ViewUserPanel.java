/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Graphics;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.User;
import util.DatabaseConnector;
import java.awt.print.Printable;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Admin
 */
public class ViewUserPanel extends javax.swing.JPanel implements Printable{

    /**
     * Creates new form ViewUserPanel
     */
    private ArrayList<User> users;
    private User selectedUser;
    
    final JPanel bottomPanel;
    public ViewUserPanel(JPanel bottomPanel) {
        initComponents();
        this.bottomPanel = bottomPanel;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        name = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        nameDisplay = new javax.swing.JTextField();
        ageDisplay = new javax.swing.JTextField();
        exportButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        CreateUserForm = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(217, 236, 255));
        jScrollPane1.setForeground(new java.awt.Color(220, 236, 252));

        userTable.setBackground(new java.awt.Color(227, 241, 255));
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
            userTable.getColumnModel().getColumn(2).setResizable(false);
        }

        name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        name.setText("Name :");

        age.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        age.setText("Age :");

        nameDisplay.setBackground(new java.awt.Color(220, 236, 252));
        nameDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameDisplayActionPerformed(evt);
            }
        });

        ageDisplay.setBackground(new java.awt.Color(220, 236, 252));

        exportButton.setBackground(new java.awt.Color(0, 0, 153));
        exportButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exportButton.setForeground(new java.awt.Color(255, 255, 255));
        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 0, 153));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(0, 0, 153));
        editButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(0, 0, 153));
        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        CreateUserForm.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        CreateUserForm.setForeground(new java.awt.Color(0, 0, 153));
        CreateUserForm.setText("View & Modify Users");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(deleteButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exportButton)
                        .addGap(150, 150, 150)))
                .addComponent(editButton)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name)
                    .addComponent(age))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameDisplay)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 191, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CreateUserForm)
                        .addGap(116, 116, 116))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(160, 160, 160))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(CreateUserForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exportButton)
                            .addComponent(deleteButton)
                            .addComponent(editButton))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name)
                            .addComponent(nameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(age)
                            .addComponent(ageDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addComponent(saveButton)
                        .addGap(30, 30, 30)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void nameDisplayActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        User newUser = new User();
        newUser.setName(nameDisplay.getText());
        //ViewUserPanel newViewPanel = new ViewUserPanel(newUser);
        try {
            String name = nameDisplay.getText();
            int age = Integer.parseInt(ageDisplay.getText());
            if (name.isEmpty() || name.length() > 26 || !name.matches("^[a-zA-Z]+")) {
                JOptionPane.showMessageDialog(null, "Please enter a Name with: \n1. Length between 1-20 characters. \n2. Chararcters from A...Z or a..z.\n3. No special characters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            }else{
                if (age < 12 || age > 100) {
                    JOptionPane.showMessageDialog(null, "Please enter age between 12 and 100 (both inclusive).", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                }else{
                    newUser.setName(name);
                    newUser.setAge(age);
                    DatabaseConnector.editUser(selectedUser, newUser);
                    JOptionPane.showMessageDialog(null, "User Edited Successfully", "Successful Edit", JOptionPane.PLAIN_MESSAGE);
                    clearFields();
                    populateTable();
                }
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No fields to be left empty!");
        }
    }                                          

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        int selectedIndex = userTable.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to edit", "Cannot edit user", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        selectedUser = users.get(selectedIndex);
        nameDisplay.setText(selectedUser.getName());
        ageDisplay.setText(Integer.toString(selectedUser.getAge()));
    }                                          

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        int selectedIndex = userTable.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to delete", "Cannot delete user", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        try {
            selectedUser = users.get(selectedIndex);
            DatabaseConnector.deleteUser(selectedUser);
            JOptionPane.showMessageDialog(null, "User Deleted Successfully", "Successfully Deleted", JOptionPane.PLAIN_MESSAGE);
            clearFields();
            populateTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }                                            

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) userTable.getModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount();

            BufferedWriter writer = new BufferedWriter(new FileWriter("exported_data.txt"));

            // Write column names
            for (int i = 0; i < colCount; i++) {
                writer.write(model.getColumnName(i) + "\t");
            }
            writer.newLine();

            // Write data
            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < colCount; j++) {
                    writer.write(model.getValueAt(i, j).toString() + "\t");
                }
                writer.newLine();
            }

            writer.close();
            JOptionPane.showMessageDialog(this, "Data Exported Successfully", "Export Completed", JOptionPane.PLAIN_MESSAGE);
            
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }                                            
    
    public void populateTable(){
        try{
            this.users = DatabaseConnector.getAllusers();
            DefaultTableModel model = (DefaultTableModel) userTable.getModel();
            model.setRowCount(0);
            for(User u: users){
                Object[] row = new Object[3];
                row[0] = u.getId();
                row[1] = u.getName();
                row[2] = u.getAge();
                model.addRow(row);
            }
            clearFields();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    
    private void clearFields(){
        nameDisplay.setText("");
        ageDisplay.setText("");
        selectedUser = null;
    }
    
    //@Override
    public int print(Graphics grphcs, PageFormat pf, int i) throws PrinterException{
        System.err.println("printing try...");
        return 0;
    }
    // Variables declaration - do not modify                     
    private javax.swing.JLabel CreateUserForm;
    private javax.swing.JLabel age;
    private javax.swing.JTextField ageDisplay;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton exportButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameDisplay;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable userTable;
    // End of variables declaration                   
}
